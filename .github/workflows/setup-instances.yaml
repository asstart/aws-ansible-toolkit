# This is a basic workflow to help you get started with Actions
name: Ansible Docker Swarm
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "validate"
  # validate:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3
  #     - name: Run ansible-lint
  #       # replace `main` with any valid ref, or tags like `v6`
  #       uses: ansible-community/ansible-lint-action@v6.0.2
  #       with:
  #         args: "ansible" # my ansible files in a folder
  run-playbook:
    # The validate Job need to be sucessfull
    # needs: [ validate ]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name:
        run: echo $PATH
        shell: bash
      - name:
        run: which python
        shell: bash
      - name:
        run: which pip
        shell: bash
      - name: Install dependencies Including Ansible
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
      # - name: write inventory to file
      #   env:
      #     INVENTORY: ${{ secrets.INVENTORY }}
      #   run: 'echo "$INVENTORY" > inventory'
      - name: known_hosts scan
        run: |
          TMP_KNOWN_HOSTS=$(ssh-keyscan -H ${{ secrets.EC2_IP }}) && \
          echo KNOWN_HOSTS=$TMP_KNOWN_HOSTS >> $GITHUB_ENV
        shell: bash
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ env.KNOWN_HOSTS }}
          # config: ${{ secrets.CONFIG }} # ssh_config; optional
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - name: run init instance playbook
        run: |
          ansible-playbook -i inventory ansible/init.yaml
      - name: run test docker playbook
        run: |
          ansible-playbook -i inventory ansible/test-docker.yaml
      - name: setup kafka
        run: |
          ansible-playbook -i inventory ansible/setup-kafka.yaml
