---
- name: Configure instance for running Docker
  hosts: aws
  remote_user: ubuntu
  become: true

  tasks:

    - name: Remove Docker if exists
      apt:
        name: 
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install dependencies for Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - uidmap
          - dbus-user-session
        state: present

    - name: Add Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/dockergpg

    - name: Create a directory for keyring if it does not exist
      ansible.builtin.file:
        path: /etc/docker/keyrings
        state: directory
        mode: '0755'
    
    - name: De-Armor Docker GPG key
      command:  gpg --dearmor < /tmp/dockergpg > /etc/docker/keyrings/docker-archive-keyring.gpg
      changed_when: false
      # no_log: true
    
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/docker/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable
        state: present
    
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Restrict access to Docker socket
      file:
        path: /var/run/docker.sock
        mode: '0660'
        owner: root
        group: docker
    
    - name: Configure Rootless Docker
      command: dockerd-rootless-setuptool.sh install
      changed_when: false
      no_log: true

    - name: Add the user 'johnd' with a specific uid and a primary group of 'admin'
      ansible.builtin.user:
        name: docker
        group: docker

    - name: Enable docker
      become: yes
      become_user: docker
      ansible.builtin.systemd:
        name: docker.service
        enabled: true
    
    - name: Enable containerd
      become: yes
      become_user: docker
      ansible.builtin.systemd:
        name: containerd.service
        enabled: true

    - name: Restart Docker service
      become: yes
      become_user: docker
      systemd:
        name: docker
        state: restarted

